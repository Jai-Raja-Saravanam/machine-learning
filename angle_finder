%{           
             #MACHINE LEARNING
             #ANGLE FINDER
             #MATLAB
HI GUYS , THIS IS JAI RAJA SARAVANAM ...... 
IN THIS PIECE OF MATLAB CODE I GOING TO MAKE A ANGLE PREDICTOR 
                     FOR (0,0) AND ANY ARBITRARY POINT (X,Y) 
                     USING MULTIPLE LINEAR REGRESSION

       Y_HAT = WEIGHT3 * X + WIEGHT2 * Y + WIEGHT1 * R + WIEGHT0 * 1


                   THANKS GUYS .... HAVE FUN......

%}



x =[];
y=[];
z=[];
costsum=[];
testing =[];
output=[];
for j =1:10
for i = 0:90 
    x(end+1) = cosd(i) ;
    y(end+1) = sind(i) ;
end
end
for k =1:10
    for m =0:90
        z(end+1)=k ;
    end
end
%input=[x;y];
for j =1:10
for i =0:90
    output(end+1) = i ;
end
end

target = output;

N_input= 910 ;
N_feature = 3 ;
learning_rate =0.01 ;
weight = zeros(1,N_feature + 1) ;

input =[x ; y ;z; ones(1,size(x,2))] ;   % 2 indicates no of column ,1 will indicate no of row

for i= 1:300000
    y_hat = weight * input ;
    error = y_hat - target ;
    cost = 1/(2*N_input)*(y_hat-target).*(y_hat-target) ;
    dcost = (1/N_input) * ( y_hat- target)* input' ;
    weight = weight - learning_rate * dcost ;
    %
         if mod(i,100) ==0
             x_test = [100*0.7071 ; 100*0.7071  ;100; 1]; 
             test_out =weight * x_test ;
             testing(end+1) = test_out ;
            
         end
    %
    costsum(end+1) =sum(cost)/N_input ;
end

disp(weight) ;
%graph
figure
plot(target)
hold on
plot(y_hat)
legend('Real','Pred')
hold on 
figure
plot(costsum)

%testing

x_validate = [800 ; 800  ;1131.1; 1]; 
%input_test =[x_test ;ones(1,size(x_test,2))] ;
validate_out =weight * x_validate ;
